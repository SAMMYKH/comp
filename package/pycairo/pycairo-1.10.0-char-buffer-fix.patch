diff --git a/src/surface.c b/src/surface.c
index 2888e9c..06984a2 100644
--- a/src/surface.c
+++ b/src/surface.c
@@ -570,8 +570,8 @@ image_surface_get_width (PycairoImageSurface *o) {
 
 
 /* Buffer interface functions, used by ImageSurface.get_data() */
-static int
-image_surface_buffer_getreadbuf (PycairoImageSurface *o, int segment,
+static Py_ssize_t
+image_surface_buffer_getreadbuf (PycairoImageSurface *o, Py_ssize_t segment,
 				 const void **ptr) {
   cairo_surface_t *surface = o->surface;
   int height, stride;
@@ -587,8 +587,8 @@ image_surface_buffer_getreadbuf (PycairoImageSurface *o, int segment,
   return height * stride;
 }
 
-static int
-image_surface_buffer_getwritebuf (PycairoImageSurface *o, int segment,
+static Py_ssize_t
+image_surface_buffer_getwritebuf (PycairoImageSurface *o, Py_ssize_t segment,
 				  const void **ptr) {
   cairo_surface_t *surface = o->surface;
   int height, stride;
@@ -604,24 +604,42 @@ image_surface_buffer_getwritebuf (PycairoImageSurface *o, int segment,
   return height * stride;
 }
 
-static int
-image_surface_buffer_getsegcount (PycairoImageSurface *o, int *lenp) {
+static Py_ssize_t
+image_surface_buffer_getsegcount (PycairoImageSurface *o, Py_ssize_t *lenp) {
   if (lenp) {
     /* report the sum of the sizes (in bytes) of all segments */
     cairo_surface_t *surface = o->surface;
     int height = cairo_image_surface_get_height (surface);
     int stride = cairo_image_surface_get_stride (surface);
-    *lenp = height * stride;
+    *lenp = (Py_ssize_t) height * stride;
   }
   return 1;  /* surface data is all in one segment */
 }
 
+static Py_ssize_t
+image_surface_buffer_getcharbuf (PycairoImageSurface *o, Py_ssize_t segment,
+				  const char **ptr)
+{
+    cairo_surface_t *surface = o->surface;
+    int height, stride;
+
+    if (segment != 0) {
+	PyErr_SetString(PyExc_SystemError,
+			"accessing non-existent ImageSurface segment");
+	return -1;
+    }
+    height = cairo_image_surface_get_height (surface);
+    stride = cairo_image_surface_get_stride (surface);
+    *ptr = (char *) cairo_image_surface_get_data (surface);
+    return height * stride;
+}
+
 /* See Python C API Manual 10.7 */
 static PyBufferProcs image_surface_as_buffer = {
   (readbufferproc) image_surface_buffer_getreadbuf,
   (writebufferproc)image_surface_buffer_getwritebuf,
   (segcountproc)   image_surface_buffer_getsegcount,
-  (charbufferproc) NULL,
+  (charbufferproc) image_surface_buffer_getcharbuf,
 };
 
 static PyMethodDef image_surface_methods[] = {
